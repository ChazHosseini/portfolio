// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Zamyad.Exemption.Data.SocialDB
{
    public partial class SocialDBContext : DbContext
    {
        public SocialDBContext()
        {
        }

        public SocialDBContext(DbContextOptions<SocialDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<PersExemptionsView> PersExemptionsViews { get; set; }
        public virtual DbSet<PersHadeseView> PersHadeseViews { get; set; }
        public virtual DbSet<PersRestView> PersRestViews { get; set; }
        public virtual DbSet<WebSystemUser> WebSystemUsers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=A-SERVER;Initial Catalog=Social;Persist Security Info=True;User ID=sqlsocialuser;Password=SaD2424()");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PersExemptionsView>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Pers_Exemptions_View");

                entity.Property(e => e.Behdasht)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.CategoryDesc)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Category_Desc");

                entity.Property(e => e.Comment)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.CostCode)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("COST_CODE");

                entity.Property(e => e.CostDesc)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("COST_DESC");

                entity.Property(e => e.EndDate)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("End_Date");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("explanation");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IsBadv)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IsCommission)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IsDoreyi)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IsSalamatCommittee)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IsSayer)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IsShoghli)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IsTebKar)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.JobDesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JOB_DESC");

                entity.Property(e => e.LastName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.NewcostCode)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("NEWCOST_CODE");

                entity.Property(e => e.Newcostdesc)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NEWCOSTDESC");

                entity.Property(e => e.PersNo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("Pers_No");

                entity.Property(e => e.StartDate)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Start_Date");

                entity.Property(e => e.TypeDesc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Type_Desc");
            });

            modelBuilder.Entity<PersHadeseView>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Pers_Hadese_View");

                entity.Property(e => e.AccDate)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Acc_Date")
                    .IsFixedLength();

                entity.Property(e => e.AccTime)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ACC_Time")
                    .IsFixedLength();

                entity.Property(e => e.AccType)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasColumnName("Acc_Type");

                entity.Property(e => e.AccidentMahal)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.AccidentMogheyiat)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.BodyPart)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CostCode)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("COST_CODE");

                entity.Property(e => e.CostDesc)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("COST_DESC");

                entity.Property(e => e.Description)
                    .HasMaxLength(700)
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.DispatchedTo)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.InjuryType)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasColumnName("Injury_Type");

                entity.Property(e => e.LastName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.NeedRest)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PersNo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("Pers_No");

                entity.Property(e => e.RegDate)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Reg_Date")
                    .IsFixedLength();

                entity.Property(e => e.StartWorkingTime)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("StartWorking_Time")
                    .IsFixedLength();
            });

            modelBuilder.Entity<PersRestView>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Pers_Rest_View");

                entity.Property(e => e.CostCode)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("COST_CODE");

                entity.Property(e => e.CostDesc)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("COST_DESC");

                entity.Property(e => e.DiseaseType)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DocName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Edate)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EDate");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Fdate)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FDate");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.IsGeneralDoc)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IsLocalDoc)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.LastName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.PersNo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("Pers_No");

                entity.Property(e => e.TotCostCode)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("TOT_COST_CODE");
            });

            modelBuilder.Entity<WebSystemUser>(entity =>
            {
                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Username)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}