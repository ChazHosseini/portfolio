// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Zamyad.Exemption.Data.EdariDB
{
    public partial class EdariDB2Context : DbContext
    {
        public EdariDB2Context()
        {
        }

        public EdariDB2Context(DbContextOptions<EdariDB2Context> options)
            : base(options)
        {
        }

        public virtual DbSet<ActivePersonV> ActivePersonVs { get; set; }
        public virtual DbSet<CostCenter> CostCenters { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=A-SERVER;Initial Catalog=EdariDB2;Persist Security Info=True;User ID=sqlsocialuser;Password=SaD2424()");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ActivePersonV>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Active_Person_V");

                entity.Property(e => e.AcordFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("ACORD_FACTOR");

                entity.Property(e => e.BazareKar).HasColumnName("bazareKar");

                entity.Property(e => e.BirCityCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BIR_CITY_CODE");

                entity.Property(e => e.BirCityDesc)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("Bir_City_Desc");

                entity.Property(e => e.BirCountryCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BIR_COUNTRY_CODE");

                entity.Property(e => e.BirProvinceCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BIR_PROVINCE_CODE");

                entity.Property(e => e.BirthDate)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIRTH_DATE");

                entity.Property(e => e.BossSpecialFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("BOSS_SPECIAL_FACTOR");

                entity.Property(e => e.CostCode)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("COST_CODE");

                entity.Property(e => e.CostDesc)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("COST_DESC");

                entity.Property(e => e.CourseCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COURSE_CODE");

                entity.Property(e => e.CourseDesc)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("COURSE_DESC");

                entity.Property(e => e.DictumBase)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DICTUM_BASE");

                entity.Property(e => e.DictumCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DICTUM_CODE");

                entity.Property(e => e.DictumDoneDate)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DICTUM_DONE_DATE");

                entity.Property(e => e.DictumGrade)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DICTUM_GRADE");

                entity.Property(e => e.DictumGroup)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DICTUM_GROUP");

                entity.Property(e => e.DictumIssueDate)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DICTUM_ISSUE_DATE");

                entity.Property(e => e.DictumStatusCode)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DICTUM_STATUS_CODE");

                entity.Property(e => e.DictumTypeCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DICTUM_TYPE_CODE");

                entity.Property(e => e.DictumTypeDesc)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("DICTUM_TYPE_DESC");

                entity.Property(e => e.DictumTypeStat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DICTUM_TYPE_STAT");

                entity.Property(e => e.DomainCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DOMAIN_CODE");

                entity.Property(e => e.DomainDesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DOMAIN_DESC");

                entity.Property(e => e.EmpDate)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EMP_DATE")
                    .IsFixedLength();

                entity.Property(e => e.EmployCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOY_CODE");

                entity.Property(e => e.EmployDesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOY_DESC");

                entity.Property(e => e.Expr1).HasColumnType("decimal(5, 2)");

                entity.Property(e => e.FatherName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FATHER_NAME");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.FolderNo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FOLDER_NO");

                entity.Property(e => e.HoliOverFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("HOLI_OVER_FACTOR");

                entity.Property(e => e.HomeAddress)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("HOME_ADDRESS");

                entity.Property(e => e.HomePhoneNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HOME_PHONE_NO");

                entity.Property(e => e.HomeStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("Home_Status");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.InMofidExpDays).HasColumnName("In_Mofid_Exp_Days");

                entity.Property(e => e.InsuDays).HasColumnName("Insu_Days");

                entity.Property(e => e.InsuNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INSU_NO");

                entity.Property(e => e.InsuranceCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INSURANCE_CODE");

                entity.Property(e => e.JobCode)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("JOB_CODE");

                entity.Property(e => e.JobDesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JOB_DESC");

                entity.Property(e => e.LastDictumCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LAST_DICTUM_CODE");

                entity.Property(e => e.LastName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.MabnaSalary).HasColumnName("Mabna_SALARY");

                entity.Property(e => e.MarriedCode)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MARRIED_CODE");

                entity.Property(e => e.MarryDate)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MARRY_DATE")
                    .IsFixedLength();

                entity.Property(e => e.MazhabCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Mazhab_Code");

                entity.Property(e => e.MazhabDesc)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Mazhab_Desc");

                entity.Property(e => e.MilMonths)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MIL_MONTHS");

                entity.Property(e => e.MilitaryCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MILITARY_CODE");

                entity.Property(e => e.MobileNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_No");

                entity.Property(e => e.NationalCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NATIONAL_CODE");

                entity.Property(e => e.OutInsuDays).HasColumnName("Out_Insu_Days");

                entity.Property(e => e.OutMofidExpDays).HasColumnName("Out_Mofid_Exp_Days");

                entity.Property(e => e.PersNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PERS_NO");

                entity.Property(e => e.Picture)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("PICTURE");

                entity.Property(e => e.PostCode)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("POST_CODE");

                entity.Property(e => e.PostDesc)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("POST_DESC");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PostalRightsFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("POSTAL_RIGHTS_FACTOR");

                entity.Property(e => e.Produceorsupport)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCEORSUPPORT");

                entity.Property(e => e.ProduceorsupportDesc)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCEORSUPPORT_DESC");

                entity.Property(e => e.ProductionRightsFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("PRODUCTION_RIGHTS_FACTOR");

                entity.Property(e => e.RankCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RANK_CODE");

                entity.Property(e => e.RankDesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANK_DESC");

                entity.Property(e => e.RankLevel).HasColumnName("RANK_LEVEL");

                entity.Property(e => e.ReligionCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("religion_Code");

                entity.Property(e => e.ReligionDesc)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Religion_Desc");

                entity.Property(e => e.RepPersNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("REP_PERS_NO");

                entity.Property(e => e.RevivalDate)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REVIVAL_DATE")
                    .IsFixedLength();

                entity.Property(e => e.SahamCode)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("SAHAM_CODE");

                entity.Property(e => e.Salary).HasColumnName("SALARY");

                entity.Property(e => e.ServiceDesc)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SERVICE_DESC");

                entity.Property(e => e.SexCode)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEX_CODE");

                entity.Property(e => e.SodCityCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SOD_CITY_CODE");

                entity.Property(e => e.SodCityDesc)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("Sod_City_Desc");

                entity.Property(e => e.SodCountryCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SOD_COUNTRY_CODE");

                entity.Property(e => e.SodProvinceCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SOD_PROVINCE_CODE");

                entity.Property(e => e.SpecialMabnaSalary).HasColumnName("Special_Mabna_SALARY");

                entity.Property(e => e.StudyGradeCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("STUDY_GRADE_CODE");

                entity.Property(e => e.StudyGradeDesc)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("STUDY_GRADE_DESC");

                entity.Property(e => e.StudyGradeScore).HasColumnName("STUDY_GRADE_SCORE");

                entity.Property(e => e.TotCostCode)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("TOT_COST_CODE");

                entity.Property(e => e.TotCostDesc)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("TOT_COST_DESC");

                entity.Property(e => e.WorkEnvCondRightsFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("WORK_ENV_COND_RIGHTS_FACTOR");

                entity.Property(e => e.WorkPhoneNo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("WORK_PHONE_NO");
            });

            modelBuilder.Entity<CostCenter>(entity =>
            {
                entity.HasKey(e => e.CostCode)
                    .HasName("PK_MahEstegrar")
                    .IsClustered(false);

                entity.ToTable("COST_CENTER");

                entity.HasIndex(e => e.CostCode, "PK_MahEstegrar_1")
                    .IsUnique()
                    .HasFillFactor(80);

                entity.Property(e => e.CostCode)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("COST_CODE");

                entity.Property(e => e.AcordFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("ACORD_FACTOR");

                entity.Property(e => e.Active)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVE");

                entity.Property(e => e.BossSpecialFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("BOSS_SPECIAL_FACTOR");

                entity.Property(e => e.CostDesc)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("COST_DESC");

                entity.Property(e => e.HoliOverFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("HOLI_OVER_FACTOR");

                entity.Property(e => e.PostalRightsFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("POSTAL_RIGHTS_FACTOR");

                entity.Property(e => e.Produceorsupport)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCEORSUPPORT");

                entity.Property(e => e.ProductionRightsFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("PRODUCTION_RIGHTS_FACTOR");

                entity.Property(e => e.TotCostCode)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("TOT_COST_CODE");

                entity.Property(e => e.WorkEnvCondRightsFactor)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("WORK_ENV_COND_RIGHTS_FACTOR");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}